[
  {
    "story_num": "001",
    "title": "Criar Estrutura de Diret√≥rios",
    "epic": "EPIC-01",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que os diret√≥rios do projeto estejam criados",
      "so_that": "o sistema tenha estrutura organizada"
    },
    "description": "Criar toda a estrutura de diret√≥rios necess√°ria para o Content Foundry funcionar: `.content-foundry/` (config), `docs/` (conte√∫do e brain), `.foundry/` (runtime e logs).",
    "acceptance_criteria": [
      "Diret√≥rio `.content-foundry/` criado com subpastas: agents/, workflows/, tasks/, templates/, checklists/, data/, hooks/",
      "Diret√≥rio `docs/` criado com subpastas: content/, architecture/",
      "Diret√≥rio `.foundry/` criado com subpastas: logs/, backups/, state/",
      "Todos diret√≥rios t√™m permiss√µes corretas (755)",
      "README.md em cada diret√≥rio explicando prop√≥sito"
    ],
    "tasks": [
      "Executar `mkdir -p` para criar estrutura completa",
      "Criar `.gitkeep` em diret√≥rios vazios",
      "Criar README.md em cada pasta principal",
      "Validar estrutura com script de verifica√ß√£o"
    ],
    "estimate": "1 story point",
    "dependencies": null
  },
  {
    "story_num": "002",
    "title": "Configurar Prote√ß√£o de Dados Sens√≠veis",
    "epic": "EPIC-01",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que o .gitignore proteja meus dados sens√≠veis",
      "so_that": "brain.md nunca seja commitado acidentalmente"
    },
    "description": "Configurar `.gitignore` para proteger brain.md, insights-journal.md, calend√°rio editorial, e toda pasta `.foundry/` de commits acidentais. Configurar permiss√µes Unix para camada adicional de prote√ß√£o.",
    "acceptance_criteria": [
      "`.gitignore` criado na raiz do projeto (j√° existe, validar)",
      "`.gitignore` protege: docs/brain.md, docs/insights-journal.md, docs/calendar.md, docs/roadmap.md, docs/content/, .foundry/, .cache/, .temp/",
      "File permissions configuradas: chmod 600 docs/brain.md, chmod 700 .foundry/",
      "Teste: tentar `git add docs/brain.md` deve ser ignorado",
      "Documenta√ß√£o de seguran√ßa em README"
    ],
    "tasks": [
      "Validar `.gitignore` existente",
      "Adicionar entradas faltantes se necess√°rio",
      "Criar script `setup-permissions.sh`",
      "Executar script ap√≥s criar brain.md",
      "Testar com git status"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-001"]
  },
  {
    "story_num": "003",
    "title": "Criar Configura√ß√£o Principal",
    "epic": "EPIC-01",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que o config.yaml principal esteja configurado",
      "so_that": "o sistema saiba minhas prefer√™ncias"
    },
    "description": "Criar `.content-foundry/config.yaml` com configura√ß√µes globais do projeto: nome, vers√£o, founder, prefer√™ncias de deep mode, voice validation threshold, auto-save, etc.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/config.yaml` criado",
      "Estrutura YAML v√°lida",
      "Se√ß√µes obrigat√≥rias: projeto (nome, vers√£o, founder, data_criacao), configuracoes (deep-mode, voice-validation-threshold, auto-save), canais (linkedin, instagram), logging (enabled, level, retention)",
      "Valores defaults sensatos",
      "Coment√°rios explicativos em YAML",
      "Valida√ß√£o de sintaxe YAML passa"
    ],
    "tasks": [
      "Criar arquivo `.content-foundry/config.yaml`",
      "Preencher campos obrigat√≥rios",
      "Adicionar coment√°rios YAML",
      "Validar sintaxe: `yamllint config.yaml` ou Python script",
      "Criar schema de valida√ß√£o (opcional)"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-001"]
  },
  {
    "story_num": "004",
    "title": "Implementar Orchestrator (Carlos)",
    "epic": "EPIC-01",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que o Orchestrator (Carlos) esteja funcional",
      "so_that": "eu tenha ponto de entrada no sistema"
    },
    "description": "Criar arquivo do agente Carlos (Orchestrator), o maestro que coordena todos os outros agentes. √â o ponto de entrada padr√£o e delega tarefas aos agentes especializados.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/orchestrator.md` criado",
      "Estrutura completa: Header markdown + avisos, YAML com agente/persona/comandos/dependencias, Instru√ß√µes de ativa√ß√£o (5 passos)",
      "Campos preenchidos: nome Carlos, id orchestrator, titulo Orquestrador & Maestro, icone üéØ, quando-usar Ponto de entrada principal, customizacao Nunca gera conte√∫do sempre delega",
      "Comandos definidos: *ajuda, *status, *sugerir, *chamar-agente {id}, *workflow {id}, *sair",
      "Depend√™ncias mapeadas: data/agent-registry.yaml, data/workflow-registry.yaml, tasks/analisar-requisicao.md, tasks/selecionar-agente.md",
      "Ativa√ß√£o funcional no Claude Code",
      "Executa `*ajuda` automaticamente ao ativar"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/orchestrator.md`",
      "Copiar template de agente do doc 03",
      "Preencher todos campos",
      "Testar ativa√ß√£o: carregar arquivo no Claude Code",
      "Validar que `*ajuda` executa",
      "Validar que carrega config.yaml (quando existir)"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-003"]
  },
  {
    "story_num": "005",
    "title": "Implementar Comandos B√°sicos",
    "epic": "EPIC-01",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que comandos b√°sicos funcionem (/cf-status, /cf-help)",
      "so_that": "eu saiba o estado do sistema"
    },
    "description": "Implementar comandos slash b√°sicos para o founder interagir com o sistema: `/cf-status` (estado do projeto), `/cf-help` (ajuda), `/cf-chamar-agente` (ativar agente).",
    "acceptance_criteria": [
      "Comando `/cf-status` funcional: mostra se brain.md existe, total de posts gerados, √∫ltimo workflow executado, configura√ß√µes ativas",
      "Comando `/cf-help` funcional: lista comandos dispon√≠veis, mostra exemplos de uso, sugere pr√≥ximos passos baseado em estado",
      "Comando `/cf-chamar-agente {id}` funcional: ativa agente espec√≠fico, valida que agente existe, mostra erro claro se n√£o existe",
      "Logging b√°sico funciona: logs salvos em `.foundry/logs/YYYY-MM-DD.log`, formato `{timestamp} [{comando}] {resultado}`, retention 30 dias",
      "Mensagens de feedback claras"
    ],
    "tasks": [
      "Criar script helper ou documento de comandos",
      "Implementar `/cf-status`",
      "Implementar `/cf-help`",
      "Implementar `/cf-chamar-agente`",
      "Configurar logging em `.foundry/logs/`",
      "Criar script de cleanup de logs antigos",
      "Testar cada comando"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-004"]
  },
  {
    "story_num": "006",
    "title": "Implementar Elicitation Expert (Elena)",
    "epic": "EPIC-02",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Elena (Elicitation Expert) esteja funcional",
      "so_that": "eu seja guiado no onboarding"
    },
    "description": "Criar agente Elena, especialista em extra√ß√£o de conhecimento que conduz o onboarding do founder e captura sua voz, hist√≥rias, valores e pilares de conte√∫do.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/elicitation-expert.md` criado",
      "Campos preenchidos: nome Elena, id elicitation-expert, titulo Especialista em Elicita√ß√£o de Conhecimento, icone üé§, categoria core",
      "Comandos definidos: *ajuda, *iniciar-onboarding, *atualizar-brain, *capturar-historia, *sair",
      "Depend√™ncias: tasks/elicitar-fundacao.md, tasks/elicitar-aprofundamento.md, tasks/elicitar-refinamento.md",
      "Persona clara: emp√°tica, curiosa, estruturada",
      "Princ√≠pios-chave: Perguntas abertas, Escuta ativa, Captura de nuances, Sem julgamento",
      "Ativa√ß√£o funcional no Claude Code"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/elicitation-expert.md`",
      "Preencher todos campos do template",
      "Definir persona e princ√≠pios",
      "Listar depend√™ncias (tasks, templates)",
      "Testar ativa√ß√£o"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-004"]
  },
  {
    "story_num": "007",
    "title": "Criar Tarefas de Elicita√ß√£o",
    "epic": "EPIC-02",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "tarefas de elicita√ß√£o estruturadas",
      "so_that": "onboarding seja guiado e eficiente"
    },
    "description": "Criar 3 tarefas de elicita√ß√£o (Funda√ß√£o, Aprofundamento, Refinamento) que guiam Elena atrav√©s do processo de onboarding. Cada tarefa tem perguntas espec√≠ficas e outputs esperados.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/tasks/elicitar-fundacao.md` criado: 15-20 min, elicitar true, perguntas identidade b√°sica/pilares/tom/safe_mode, output se√ß√£o identidade e pilares do brain.md",
      "Arquivo `.content-foundry/tasks/elicitar-aprofundamento.md` criado: 30-40 min, perguntas hist√≥rias profundas/valores/experi√™ncias, output se√ß√£o historias e valores do brain.md",
      "Arquivo `.content-foundry/tasks/elicitar-refinamento.md` criado: 15-20 min, perguntas exemplos de voz/padr√µes de linguagem/palavras preferidas, output se√ß√£o voz.exemplos do brain.md",
      "Cada tarefa tem: lista de perguntas (5-10), formato de captura, valida√ß√µes, pr√≥ximo passo claro",
      "Formato YAML + Markdown consistente"
    ],
    "tasks": [
      "Criar `.content-foundry/tasks/elicitar-fundacao.md`",
      "Criar `.content-foundry/tasks/elicitar-aprofundamento.md`",
      "Criar `.content-foundry/tasks/elicitar-refinamento.md`",
      "Definir perguntas para cada fase",
      "Definir outputs esperados",
      "Validar estrutura YAML"
    ],
    "estimate": "3 story points",
    "dependencies": ["STORY-006"]
  },
  {
    "story_num": "008",
    "title": "Implementar Voice Validator (Beatriz)",
    "epic": "EPIC-02",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Beatriz (Voice Validator) valide minha voz",
      "so_that": "conte√∫do gerado seja aut√™ntico"
    },
    "description": "Criar agente Beatriz, especialista em valida√ß√£o de autenticidade que analisa se conte√∫do gerado soa como o founder (n√£o como IA gen√©rica). Retorna score 1-10.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/voice-validator.md` criado",
      "Campos preenchidos: nome Beatriz, id voice-validator, titulo Validadora de Autenticidade de Voz, icone üéØ, categoria core",
      "Comandos definidos: *validar-voz {conteudo}, *analisar-padroes, *comparar {texto}, *sair",
      "Depend√™ncias: checklists/validacao-voz.md",
      "L√≥gica de scoring definida: compara com se√ß√£o voz.exemplos do brain.md, verifica vocabul√°rio/estrutura/tom, detecta chav√µes, retorna score 1-10 + breakdown",
      "Threshold: >= 8.5 para aprovar",
      "Se < 8.5: sugere melhorias espec√≠ficas"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/voice-validator.md`",
      "Definir algoritmo de scoring (10 crit√©rios)",
      "Criar checklist de valida√ß√£o",
      "Testar com exemplos (deve detectar IA gen√©rica)",
      "Validar ativa√ß√£o"
    ],
    "estimate": "3 story points",
    "dependencies": ["STORY-006"]
  },
  {
    "story_num": "009",
    "title": "Criar Checklist de Valida√ß√£o de Voz",
    "epic": "EPIC-02",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "checklist de valida√ß√£o de voz estruturada",
      "so_that": "scoring seja consistente"
    },
    "description": "Criar checklist com 10 crit√©rios de valida√ß√£o de autenticidade que Beatriz usa para calcular score. Cada crit√©rio vale 1 ponto, total 10.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/checklists/validacao-voz.md` criado",
      "10 crit√©rios definidos: vocabul√°rio do founder, estrutura de frase, tom consistente, hist√≥rias pessoais, evita chav√µes, comprimento de par√°grafo, uso de emojis, CTA no estilo, safe mode respeitado, soa humano",
      "Cada crit√©rio tem: descri√ß√£o clara, exemplos de pass/fail, peso (todos peso 1)",
      "Scoring: Soma dos pontos / 10 = score final",
      "Threshold: >= 8.5 (85%) para aprovar"
    ],
    "tasks": [
      "Criar `.content-foundry/checklists/validacao-voz.md`",
      "Definir 10 crit√©rios",
      "Adicionar exemplos de cada",
      "Documentar f√≥rmula de scoring",
      "Testar com exemplos reais"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-008"]
  },
  {
    "story_num": "010",
    "title": "Implementar Workflow #1 (Onboarding)",
    "epic": "EPIC-02",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "executar Workflow #1 (Onboarding)",
      "so_that": "meu brain.md seja criado de forma guiada"
    },
    "description": "Criar Workflow #1 que orquestra o processo completo de onboarding: Carlos apresenta ‚Üí Elena elicita ‚Üí Beatriz valida ‚Üí brain.md v1.0 criado.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/workflows/01-onboarding.md` criado",
      "Estrutura YAML: id onboarding, nome Onboarding Inicial, dura√ß√£o 60-90 min, agentes orchestrator/elicitation-expert/voice-validator, prioridade CR√çTICA",
      "5 passos sequenciais: Boas-vindas (Carlos 2-3 min), Fase 1 Funda√ß√£o (Elena 15-20 min), Fase 2 Aprofundamento (Elena 30-40 min), Fase 3 Refinamento (Elena 15-20 min), Valida√ß√£o inicial (Beatriz 5-10 min)",
      "Outputs gerados: docs/brain.md (v1.0), docs/insights-journal.md (iniciado), .foundry/state.yaml (primeira sess√£o)",
      "Workflow pode ser executado via `/cf-workflow onboarding`",
      "Progresso mostrado (Step 1/5, Step 2/5, etc)"
    ],
    "tasks": [
      "Criar `.content-foundry/workflows/01-onboarding.md`",
      "Definir passos sequenciais",
      "Mapear agentes envolvidos",
      "Definir outputs",
      "Testar execu√ß√£o end-to-end",
      "Validar dura√ß√£o (~60-90 min)"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-006", "STORY-008", "STORY-007"]
  },
  {
    "story_num": "011",
    "title": "Gerar brain.md v1.0",
    "epic": "EPIC-02",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que brain.md seja gerado com meus dados",
      "so_that": "sistema tenha minha voz capturada"
    },
    "description": "Durante Workflow #1, criar arquivo `docs/brain.md` com dados do founder capturados por Elena. Formato: YAML frontmatter + Markdown body.",
    "acceptance_criteria": [
      "Arquivo `docs/brain.md` criado",
      "Estrutura h√≠brida (YAML + Markdown): Frontmatter YAML com metadados, Body Markdown com conte√∫do narrativo",
      "Se√ß√µes obrigat√≥rias: identidade, pilares, voz, historias, valores, safe_mode, versao 1.0.0",
      "Conte√∫do m√≠nimo: >= 500 palavras, >= 3 pilares, >= 5 hist√≥rias, >= 3 exemplos de voz",
      "Sintaxe YAML v√°lida",
      "Voice validation inicial >= 7.0/10",
      "File permissions: chmod 600",
      "Backup autom√°tico em `.foundry/backups/brain-v1.0.0.md`"
    ],
    "tasks": [
      "Definir schema YAML de brain.md",
      "Criar template vazio",
      "Durante Workflow #1, preencher com dados de Elena",
      "Validar sintaxe YAML",
      "Executar voice validation (Beatriz)",
      "Configurar chmod 600",
      "Criar backup",
      "Salvar em docs/brain.md"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-010"]
  },
  {
    "story_num": "012",
    "title": "Implementar LinkedIn Writer (Lucas)",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Lucas (LinkedIn Writer) esteja funcional",
      "so_that": "eu crie posts LinkedIn aut√™nticos"
    },
    "description": "Criar agente Lucas, especialista em LinkedIn thought leadership que gera posts profissionais soando como o founder.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/linkedin-writer.md` criado",
      "Usar exemplo completo do doc 03 como base",
      "Campos preenchidos: nome Lucas, id linkedin-writer, categoria producao, canal linkedin",
      "Comandos definidos: *gerar-post {t√≥pico}, *otimizar-gancho, *criar-carrossel {tema}, *validar-voz, *doc-out, *sair",
      "Customiza√ß√µes espec√≠ficas: SEMPRE carrega 100% brain.md (Deep Mode), SEMPRE valida voice >= 8.5, NUNCA usa chav√µes de coach",
      "Princ√≠pios-chave (8): Autenticidade Acima de Tudo, Estrutura Clara, Storytelling Estrat√©gico, Engajamento Intencional, Respeito ao Safe Mode, Anti-Gen√©rico, Conversacional mas Profissional, Deep Context Always",
      "Ativa√ß√£o funcional"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/linkedin-writer.md`",
      "Copiar exemplo do doc 03",
      "Ajustar campos se necess√°rio",
      "Testar ativa√ß√£o",
      "Validar que carrega brain.md"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-011"]
  },
  {
    "story_num": "013",
    "title": "Criar Tarefa de Gera√ß√£o de Post LinkedIn",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "tarefa estruturada de gera√ß√£o de post",
      "so_that": "processo seja consistente"
    },
    "description": "Criar tarefa `gerar-post-linkedin.md` que define o workflow passo-a-passo de cria√ß√£o de post: elicitar t√≥pico ‚Üí gerar 3 varia√ß√µes ‚Üí validar voz ‚Üí aplicar quality gates ‚Üí salvar.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/tasks/gerar-post-linkedin.md` criado",
      "Estrutura: id gerar-post-linkedin, dura√ß√£o 15-20 min, elicitar true, agente linkedin-writer",
      "6 passos definidos: Elicitar t√≥pico e contexto, Carregar 100% brain.md (Deep Mode), Gerar 3 varia√ß√µes de post, Validar voz (Beatriz >= 8.5), Aplicar quality gates (5 layers), Salvar post aprovado em docs/content/",
      "Para cada varia√ß√£o: Estrutura gancho + corpo + CTA, Comprimento 800-1300 caracteres, Formato LinkedIn-friendly",
      "Valida√ß√µes: Voice score >= 8.5, Sem chav√µes, Safe mode respeitado, Estrutura correta",
      "Output: arquivo .md em docs/content/"
    ],
    "tasks": [
      "Criar `.content-foundry/tasks/gerar-post-linkedin.md`",
      "Definir 6 passos",
      "Definir perguntas de elicita√ß√£o",
      "Definir formato de output",
      "Documentar valida√ß√µes",
      "Testar execu√ß√£o"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-012"]
  },
  {
    "story_num": "014",
    "title": "Criar Template de Post LinkedIn",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "template de post LinkedIn",
      "so_that": "estrutura seja consistente"
    },
    "description": "Criar template YAML que define estrutura de post LinkedIn: gancho, corpo, CTA, hashtags, comprimento, formato.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/templates/linkedin-post.yaml` criado",
      "Estrutura definida: gancho (3 primeiras linhas), corpo (3-8 par√°grafos), cta, hashtags (3-5 opcional), emojis (opcional)",
      "Comprimento: M√≠nimo 800 caracteres, M√°ximo 1300 caracteres, Ideal 1000-1200 caracteres",
      "Formato LinkedIn-friendly: Quebras de linha para leitura, Par√°grafos curtos (2-3 linhas), Gancho sem retic√™ncias, CTA n√£o agressivo",
      "Exemplos inclu√≠dos no template",
      "Coment√°rios YAML explicativos"
    ],
    "tasks": [
      "Criar `.content-foundry/templates/linkedin-post.yaml`",
      "Definir estrutura de se√ß√µes",
      "Definir constraints (comprimento, formato)",
      "Adicionar exemplos",
      "Validar sintaxe YAML"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-013"]
  },
  {
    "story_num": "015",
    "title": "Implementar Quality Gates",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "quality gates autom√°ticos",
      "so_that": "apenas conte√∫do de alta qualidade seja aprovado"
    },
    "description": "Implementar 5 layers de quality gates que validam post antes de salvar: Structure, Length, Authenticity, Brand Alignment, Editorial.",
    "acceptance_criteria": [
      "5 quality gates implementados: Layer 1 Structure (gancho/corpo/CTA), Layer 2 Length (>= 800, <= 1300 chars), Layer 3 Authenticity (voice >= 8.5, sem chav√µes), Layer 4 Brand Alignment (alinhado com pilares/valores), Layer 5 Editorial (safe mode respeitado, sem typos)",
      "Se QUALQUER gate falha: Post rejeitado, Feedback espec√≠fico gerado, Sugest√µes de corre√ß√£o, Loop de revis√£o",
      "Se TODOS gates passam: Post aprovado, Salvo em docs/content/, Log de sucesso",
      "Checklist `pronto-para-publicar-linkedin.md` criada"
    ],
    "tasks": [
      "Definir l√≥gica de cada gate",
      "Criar checklist `.content-foundry/checklists/pronto-para-publicar-linkedin.md`",
      "Implementar valida√ß√µes",
      "Gerar feedback espec√≠fico por gate",
      "Testar com posts bons e ruins"
    ],
    "estimate": "3 story points",
    "dependencies": ["STORY-008"]
  },
  {
    "story_num": "016",
    "title": "Implementar Workflow #3 (Produ√ß√£o Express)",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "executar Workflow #3 (Produ√ß√£o Express)",
      "so_that": "eu crie posts rapidamente"
    },
    "description": "Criar Workflow #3 que orquestra produ√ß√£o r√°pida de 1 post: Carlos ativa Lucas ‚Üí Lucas elicita t√≥pico ‚Üí Gera post ‚Üí Valida voz ‚Üí Quality gates ‚Üí Salva.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/workflows/03-producao-express.md` criado",
      "Estrutura: id producao-express, nome Produ√ß√£o Express (Post √önico), dura√ß√£o 15-20 min, agentes orchestrator/linkedin-writer/voice-validator/brand-guardian",
      "4 passos: Carlos pergunta canal e t√≥pico (2 min), Lucas elicita contexto e gera 3 varia√ß√µes (8-10 min), Beatriz valida voz >= 8.5 (2 min), Quality gates aplicados post salvo (3-5 min)",
      "Output: Post em `docs/content/linkedin-YYYY-MM-DD-{slug}.md`, Log em `.foundry/logs/`, State atualizado",
      "Execut√°vel via `/cf-workflow producao-express`",
      "Dura√ß√£o real <= 20 min"
    ],
    "tasks": [
      "Criar `.content-foundry/workflows/03-producao-express.md`",
      "Definir passos sequenciais",
      "Mapear agentes",
      "Definir formato de output",
      "Testar end-to-end",
      "Medir dura√ß√£o"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-012", "STORY-013", "STORY-015"]
  },
  {
    "story_num": "017",
    "title": "Salvar Posts Gerados",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que posts gerados sejam salvos",
      "so_that": "eu tenha hist√≥rico e possa publicar"
    },
    "description": "Implementar l√≥gica de salvamento de posts em `docs/content/` com naming convention, metadados, e versionamento.",
    "acceptance_criteria": [
      "Posts salvos em `docs/content/`",
      "Naming convention: `linkedin-YYYY-MM-DD-{slug}.md` (slug: primeiras 3-5 palavras kebab-case)",
      "Formato do arquivo: Frontmatter YAML com metadados, Body Markdown com conte√∫do",
      "Metadados inclu√≠dos: canal, data_criacao, topico, pilar, voice_score, status (draft/approved/published), versao 1.0.0",
      "Conte√∫do: Post completo (gancho + corpo + CTA), Hashtags (se houver), Notas (opcional)",
      "Comando `*doc-out` do Lucas salva arquivo",
      "Confirma√ß√£o clara ao founder: 'Post salvo em...'"
    ],
    "tasks": [
      "Definir naming convention",
      "Definir schema de metadados YAML",
      "Implementar fun√ß√£o de salvamento",
      "Gerar slug automaticamente",
      "Testar salvamento",
      "Validar formato de output"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-016"]
  },
  {
    "story_num": "018",
    "title": "Validar Primeiro Post End-to-End",
    "epic": "EPIC-03",
    "priority": "P0",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "gerar meu primeiro post completo",
      "so_that": "eu valide que sistema funciona"
    },
    "description": "Executar Workflow #3 end-to-end e gerar primeiro post LinkedIn real do founder, validando todos os componentes funcionam juntos.",
    "acceptance_criteria": [
      "Workflow #3 executado com sucesso",
      "Post gerado passa valida√ß√µes: Voice score >= 8.5/10, Estrutura correta, Comprimento adequado (800-1300 chars), Sem chav√µes, Safe mode respeitado, 5 quality gates passam",
      "Post salvo em `docs/content/linkedin-YYYY-MM-DD-{slug}.md`",
      "Founder aprova post manualmente",
      "Founder se sente confort√°vel publicando",
      "Dura√ß√£o <= 20 min",
      "Log completo em `.foundry/logs/`",
      "Celebra√ß√£o ao finalizar! üéâ"
    ],
    "tasks": [
      "Executar `/cf-workflow producao-express`",
      "Founder fornece t√≥pico",
      "Lucas gera 3 varia√ß√µes",
      "Founder escolhe melhor varia√ß√£o",
      "Valida√ß√µes executadas",
      "Post salvo",
      "Founder revisa arquivo final",
      "Founder aprova ou rejeita",
      "Documentar resultado"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-016"]
  },
  {
    "story_num": "019",
    "title": "Implementar Brand Guardian (Ana)",
    "epic": "EPIC-04",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Ana (Brand Guardian) valide alinhamento de marca",
      "so_that": "valores sejam respeitados"
    },
    "description": "Criar agente Ana, guardi√£o de marca que valida se conte√∫do est√° alinhado com pilares, valores e safe_mode do founder.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/brand-guardian.md` criado",
      "Campos: nome Ana, id brand-guardian, categoria estrategia",
      "Comandos: *validar-marca {conteudo}, *verificar-valores, *review-final, *sair",
      "Valida: Alinhamento com pilares de conte√∫do, Consist√™ncia com valores do founder, Respeito ao safe_mode, Prote√ß√£o contra off-brand",
      "Retorna: Pass/Fail, Score de alinhamento (1-10), Problemas identificados, Sugest√µes de ajuste",
      "Integrada no Workflow #3 (Quality Gate Layer 4)"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/brand-guardian.md`",
      "Definir algoritmo de valida√ß√£o",
      "Criar checklist de brand alignment",
      "Testar com posts on-brand e off-brand",
      "Integrar no Workflow #3"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-011"]
  },
  {
    "story_num": "020",
    "title": "Aprimorar Voice Validator (Beatriz)",
    "epic": "EPIC-04",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "score detalhado de voice validation",
      "so_that": "eu entenda por que passou/falhou"
    },
    "description": "Aprimorar Beatriz para retornar score detalhado com breakdown: quais crit√©rios passaram, quais falharam, sugest√µes espec√≠ficas de melhoria.",
    "acceptance_criteria": [
      "Beatriz atualizada com scoring detalhado",
      "Output de valida√ß√£o inclui: Score total (1-10), Breakdown por crit√©rio (10 crit√©rios), Para cada crit√©rio Pass/Fail + raz√£o, Problemas identificados (lista), Sugest√µes de melhoria (espec√≠ficas n√£o gen√©ricas)",
      "Exemplo de output: Voice Score 7.2/10 com breakdown detalhado, problemas e sugest√µes espec√≠ficas",
      "Integrado no Workflow #3"
    ],
    "tasks": [
      "Atualizar `.content-foundry/agents/voice-validator.md`",
      "Implementar scoring detalhado",
      "Gerar breakdown por crit√©rio",
      "Identificar problemas espec√≠ficos",
      "Gerar sugest√µes acion√°veis",
      "Testar com posts com diferentes scores"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-008", "STORY-009"]
  },
  {
    "story_num": "021",
    "title": "Criar Checklist de Safe Mode",
    "epic": "EPIC-04",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "checklist de safe mode",
      "so_that": "tom seja validado corretamente"
    },
    "description": "Criar checklist que valida se conte√∫do respeita safe_mode configurado (conservative/balanced/bold).",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/checklists/safe-mode-check.md` criado",
      "3 modos definidos: Conservative (profissional, suave, educativo), Balanced (aut√™ntico, opini√µes claras respeitosas), Bold (opini√µes fortes, provocativo, 100% aut√™ntico)",
      "Para cada modo: Lista de verifica√ß√£o (5-8 itens), Exemplos de Pass/Fail, Red flags a evitar",
      "Usado por Ana (Brand Guardian) no Layer 5 (Editorial)"
    ],
    "tasks": [
      "Criar `.content-foundry/checklists/safe-mode-check.md`",
      "Definir crit√©rios para cada modo",
      "Adicionar exemplos",
      "Documentar red flags",
      "Integrar na valida√ß√£o de Ana"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-019"]
  },
  {
    "story_num": "022",
    "title": "Implementar Loop de Revis√£o",
    "epic": "EPIC-04",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "loop de revis√£o autom√°tico",
      "so_that": "posts com score < 8.5 sejam melhorados"
    },
    "description": "Implementar l√≥gica de loop de revis√£o: se voice score < 8.5, rejeitar post, mostrar feedback, sugerir melhorias, permitir regenera√ß√£o ou edi√ß√£o manual.",
    "acceptance_criteria": [
      "Se voice score < 8.5: Post rejeitado automaticamente, Feedback detalhado mostrado, 3 op√ß√µes oferecidas (Regenerar/Editar/Cancelar)",
      "Se founder escolhe Regenerar: Lucas usa feedback de Beatriz, Gera nova vers√£o, Valida novamente, Loop at√© score >= 8.5 OU founder cancelar",
      "Se founder escolhe Editar: Post aberto para edi√ß√£o, Founder faz ajustes, Valida novamente, Loop at√© score >= 8.5 OU founder aprovar manualmente",
      "Limite: m√°ximo 3 tentativas de regenera√ß√£o (evitar loop infinito)",
      "Tracking de tentativas em logs"
    ],
    "tasks": [
      "Implementar l√≥gica de loop de revis√£o",
      "Adicionar op√ß√µes de a√ß√£o (regenerar/editar/cancelar)",
      "Integrar feedback de Beatriz",
      "Limitar a 3 tentativas",
      "Testar cen√°rio de score baixo",
      "Documentar em Workflow #3"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-020"]
  },
  {
    "story_num": "023",
    "title": "Testar Quality Gates End-to-End",
    "epic": "EPIC-04",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "validar que quality gates funcionam",
      "so_that": "apenas conte√∫do excelente seja aprovado"
    },
    "description": "Testar os 5 quality gates com posts intencionalmente ruins: sem estrutura, muito curto, gen√©rico, off-brand, fora do safe_mode. Validar que todos s√£o rejeitados corretamente.",
    "acceptance_criteria": [
      "5 cen√°rios de teste criados: Post sem estrutura (Fail Layer 1), Post muito curto (Fail Layer 2), Post gen√©rico (Fail Layer 3), Post off-brand (Fail Layer 4), Post fora do safe_mode (Fail Layer 5)",
      "Cada cen√°rio testado: Post rejeitado, Gate espec√≠fico identificado, Feedback correto gerado, Sugest√µes relevantes fornecidas",
      "1 cen√°rio de sucesso testado: Post perfeito (passa todos gates), Aprovado, Salvo corretamente",
      "Documenta√ß√£o de testes em `.foundry/test-results.md`"
    ],
    "tasks": [
      "Criar 5 posts intencionalmente ruins",
      "Criar 1 post perfeito",
      "Executar Workflow #3 com cada um",
      "Validar que rejei√ß√µes funcionam",
      "Validar feedback",
      "Documentar resultados"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-015", "STORY-022"]
  },
  {
    "story_num": "024",
    "title": "Implementar Instagram Creator (Marina)",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Marina (Instagram Creator) esteja funcional",
      "so_that": "eu crie legendas Instagram aut√™nticas"
    },
    "description": "Criar agente Marina, especialista em Instagram que gera legendas e carross√©is adaptados ao tom mais casual do canal.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/instagram-feed-writer.md` criado",
      "Campos: nome Marina, id instagram-feed-writer, categoria producao, canal instagram",
      "Comandos: *gerar-legenda {t√≥pico}, *criar-carrossel {tema}, *otimizar-hashtags, *validar-voz, *doc-out, *sair",
      "Adapta√ß√£o de tom: Mais casual que LinkedIn, Mais emojis (se voz permite), Par√°grafos mais curtos, Hashtags estrat√©gicas (8-15), CTA mais direto",
      "SEMPRE carrega 100% brain.md (Deep Mode)",
      "Voice threshold >= 8.5 (mesmo rigor)",
      "Respeita safe_mode"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/instagram-feed-writer.md`",
      "Definir adapta√ß√£o de tom Instagram",
      "Listar comandos e depend√™ncias",
      "Testar ativa√ß√£o",
      "Validar adapta√ß√£o funciona"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-012"]
  },
  {
    "story_num": "025",
    "title": "Criar Template de Legenda Instagram",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "template de legenda Instagram",
      "so_that": "estrutura seja consistente"
    },
    "description": "Criar template YAML que define estrutura de legenda Instagram: gancho, corpo, CTA, hashtags, emojis.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/templates/instagram-legenda.yaml` criado",
      "Estrutura: gancho (primeira linha hook visual + textual), corpo (3-8 par√°grafos curtos), cta, hashtags (8-15), emojis (uso estrat√©gico opcional)",
      "Comprimento: M√≠nimo 800 caracteres, M√°ximo 2000 caracteres, Ideal 1200-1500 caracteres",
      "Formato Instagram-friendly: Quebras de linha generosas, Par√°grafos muito curtos, Hashtags no final, Emojis no in√≠cio de par√°grafos (opcional)",
      "Hashtags: Mix de nicho/trending/branded",
      "Exemplos inclu√≠dos"
    ],
    "tasks": [
      "Criar `.content-foundry/templates/instagram-legenda.yaml`",
      "Definir estrutura",
      "Definir constraints",
      "Estrat√©gia de hashtags",
      "Adicionar exemplos",
      "Validar YAML"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-024"]
  },
  {
    "story_num": "026",
    "title": "Criar Tarefa de Gera√ß√£o de Legenda Instagram",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "tarefa de gera√ß√£o de legenda Instagram",
      "so_that": "processo seja guiado"
    },
    "description": "Criar tarefa similar a `gerar-post-linkedin.md` mas adaptada para Instagram: tom mais casual, hashtags obrigat√≥rias, emojis estrat√©gicos.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/tasks/gerar-legenda-instagram.md` criado",
      "6 passos: Elicitar t√≥pico e contexto, Carregar 100% brain.md, Gerar 3 varia√ß√µes (tom mais casual), Adicionar 8-15 hashtags relevantes, Validar voz (>= 8.5), Salvar em docs/content/",
      "Adapta√ß√µes Instagram: Par√°grafos mais curtos, Mais quebras de linha, Hashtags obrigat√≥rias, Emojis se voz permite, CTA mais direto",
      "Quality gates aplicados (5 layers)",
      "Output: `docs/content/instagram-YYYY-MM-DD-{slug}.md`"
    ],
    "tasks": [
      "Criar `.content-foundry/tasks/gerar-legenda-instagram.md`",
      "Definir passos",
      "Adaptar perguntas de elicita√ß√£o",
      "Adicionar gera√ß√£o de hashtags",
      "Documentar valida√ß√µes",
      "Testar"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-025"]
  },
  {
    "story_num": "027",
    "title": "Adaptar Workflow #3 para Instagram",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "executar Workflow #3 para Instagram",
      "so_that": "eu crie legendas rapidamente"
    },
    "description": "Adaptar Workflow #3 (Produ√ß√£o Express) para funcionar com Instagram: Carlos pergunta canal ‚Üí se Instagram, ativa Marina em vez de Lucas.",
    "acceptance_criteria": [
      "Workflow #3 atualizado para suportar m√∫ltiplos canais",
      "Carlos pergunta: 'Qual canal? (1) LinkedIn (2) Instagram'",
      "Se LinkedIn: Ativa Lucas, Usa template linkedin-post.yaml, Salva em linkedin-YYYY-MM-DD.md",
      "Se Instagram: Ativa Marina, Usa template instagram-legenda.yaml, Salva em instagram-YYYY-MM-DD.md",
      "Mesmas valida√ß√µes (voice >= 8.5, quality gates)",
      "Dura√ß√£o <= 20 min (ambos canais)",
      "Execut√°vel via `/cf-workflow producao-express`"
    ],
    "tasks": [
      "Atualizar `.content-foundry/workflows/03-producao-express.md`",
      "Adicionar decis√£o de canal",
      "Mapear canal ‚Üí agente",
      "Mapear canal ‚Üí template",
      "Testar com ambos canais",
      "Validar dura√ß√£o"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-026"]
  },
  {
    "story_num": "028",
    "title": "Criar Template de Carrossel Instagram",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "template de carrossel Instagram",
      "so_that": "conte√∫do educativo seja visual"
    },
    "description": "Criar template YAML para carross√©is Instagram: 10 slides m√°ximo, slide 1 hook, slides 2-9 conte√∫do, slide 10 CTA.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/templates/instagram-carrossel.yaml` criado",
      "Estrutura de 10 slides: Slide 1 Hook visual + t√≠tulo, Slides 2-9 Conte√∫do educativo (1 ideia/slide), Slide 10 Summary + CTA",
      "Para cada slide: titulo (3-8 palavras), conteudo (20-50 palavras), visual_sugestao (cor/√≠cone/layout)",
      "Comprimento total: M√≠nimo 5 slides, M√°ximo 10 slides, Ideal 7-8 slides",
      "Guidelines visuais inclu√≠das",
      "Nota: MVP n√£o gera imagens, apenas estrutura de texto"
    ],
    "tasks": [
      "Criar `.content-foundry/templates/instagram-carrossel.yaml`",
      "Definir estrutura de slides",
      "Guidelines visuais",
      "Exemplos de carrossel",
      "Validar YAML"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-024"]
  },
  {
    "story_num": "029",
    "title": "Testar Gera√ß√£o de Posts Instagram",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "gerar 3+ posts Instagram",
      "so_that": "eu valide funcionamento do canal"
    },
    "description": "Executar Workflow #3 (Instagram) 3+ vezes, gerar legendas, validar que voz √© mantida e formato √© correto.",
    "acceptance_criteria": [
      "3+ legendas Instagram geradas",
      "Cada legenda: Voice score >= 8.5, Estrutura correta, Hashtags relevantes (8-15), Tom mais casual que LinkedIn, Safe mode respeitado, 5 quality gates passam",
      "Posts salvos em `docs/content/instagram-YYYY-MM-DD-{slug}.md`",
      "Founder aprova cada post",
      "Founder se sente confort√°vel publicando",
      "Adapta√ß√£o de tom funciona (n√£o √© apenas LinkedIn reescrito)"
    ],
    "tasks": [
      "Executar `/cf-workflow producao-express` 3+ vezes",
      "Escolher canal Instagram",
      "Fornecer t√≥picos diversos",
      "Validar outputs",
      "Comparar tom LinkedIn vs Instagram",
      "Founder review e aprova√ß√£o"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-027"]
  },
  {
    "story_num": "030",
    "title": "Validar Voice Score Consistente Entre Canais",
    "epic": "EPIC-05",
    "priority": "P1",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que voice score seja >= 8.5 em ambos canais",
      "so_that": "autenticidade seja mantida"
    },
    "description": "Comparar voice scores de posts LinkedIn vs Instagram. Validar que ambos atingem >= 8.5 apesar de tons diferentes (profissional vs casual).",
    "acceptance_criteria": [
      "Voice scores comparados: LinkedIn m√©dia >= 8.5, Instagram m√©dia >= 8.5",
      "Diferen√ßas de tom identificadas e validadas: Instagram mais casual/emojis/hashtags, MAS ambos soam como founder",
      "Beatriz valida ambos canais corretamente: Entende diferen√ßa de tom por canal, N√£o penaliza Instagram por ser casual, Foca em autenticidade n√£o formalidade",
      "Se voice score Instagram < LinkedIn consistentemente: Investigar causa, Ajustar valida√ß√£o ou template"
    ],
    "tasks": [
      "Gerar 5 posts LinkedIn",
      "Gerar 5 posts Instagram",
      "Comparar voice scores",
      "Analisar diferen√ßas de tom",
      "Validar consist√™ncia de autenticidade",
      "Ajustar se necess√°rio",
      "Documentar findings"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-029"]
  },
  {
    "story_num": "031",
    "title": "Implementar Content Strategist (Sofia)",
    "epic": "EPIC-06",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Sofia (Content Strategist) esteja funcional",
      "so_that": "eu planeje meu conte√∫do"
    },
    "description": "Criar agente Sofia, estrategista de conte√∫do que planeja calend√°rio editorial, sugere t√≥picos baseados em pilares, e balanceia canais.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/agents/content-strategist.md` criado",
      "Campos: nome Sofia, id content-strategist, categoria estrategia",
      "Comandos: *criar-calendario {periodo}, *sugerir-topicos {quantidade}, *balancear-canais, *analisar-gaps, *sair",
      "Analisa brain.md: Pilares de conte√∫do, Hist√≥rias ainda n√£o usadas, Valores a explorar",
      "Sugere t√≥picos: Alinhados com pilares, Variedade (educativo/inspiracional/storytelling), Mix de formatos (post/carrossel/artigo)",
      "Balanceamento: 60% LinkedIn / 40% Instagram (ajust√°vel), Mix de pilares (n√£o repetir mesmo 3x seguidas)"
    ],
    "tasks": [
      "Criar `.content-foundry/agents/content-strategist.md`",
      "Definir algoritmo de sugest√£o de t√≥picos",
      "Definir l√≥gica de balanceamento",
      "Listar depend√™ncias",
      "Testar ativa√ß√£o"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-011"]
  },
  {
    "story_num": "032",
    "title": "Criar Workflow #2 (Planejamento Mensal)",
    "epic": "EPIC-06",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "executar Workflow #2 (Planejamento Mensal)",
      "so_that": "eu tenha calend√°rio editorial"
    },
    "description": "Criar Workflow #2 que orquestra planejamento de 1 m√™s de conte√∫do: Carlos ativa Sofia ‚Üí Sofia elicita objetivos ‚Üí Sugere 12-20 t√≥picos ‚Üí Distribui entre canais ‚Üí Gera calend√°rio.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/workflows/02-planejamento-mensal.md` criado",
      "Estrutura: id planejamento-mensal, dura√ß√£o 30-45 min, agentes orchestrator/content-strategist",
      "5 passos: Carlos pergunta objetivos (5 min), Sofia analisa brain.md (5 min), Sofia sugere 12-20 t√≥picos (10-15 min), Sofia distribui entre LinkedIn/Instagram (5 min), Sofia gera calend√°rio em docs/calendar.md (5-10 min)",
      "Output: `docs/calendar.md` (calend√°rio edit√°vel)",
      "Execut√°vel via `/cf-workflow planejamento-mensal`"
    ],
    "tasks": [
      "Criar `.content-foundry/workflows/02-planejamento-mensal.md`",
      "Definir passos",
      "Mapear agentes",
      "Definir formato de output (calendar.md)",
      "Testar end-to-end"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-031"]
  },
  {
    "story_num": "033",
    "title": "Criar Template de Calend√°rio Editorial",
    "epic": "EPIC-06",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "template de calend√°rio editorial",
      "so_that": "planejamento seja estruturado"
    },
    "description": "Criar template YAML/Markdown para calend√°rio editorial mensal: semanas, dias, canal, t√≥pico, pilar, status.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/templates/calendario-editorial.yaml` criado",
      "Estrutura: M√™s/Ano, Objetivo do m√™s, 4-5 semanas, Para cada semana (Tema da semana, Dias de publica√ß√£o, Para cada dia: Data/Canal/T√≥pico/Pilar/Formato/Status)",
      "Exemplo de entrada inclu√≠do",
      "Formato edit√°vel (founder pode ajustar)",
      "Salvo em `docs/calendar.md`"
    ],
    "tasks": [
      "Criar `.content-foundry/templates/calendario-editorial.yaml`",
      "Definir estrutura",
      "Adicionar exemplos",
      "Validar YAML"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-032"]
  },
  {
    "story_num": "034",
    "title": "Implementar Sugest√£o Inteligente de T√≥picos",
    "epic": "EPIC-06",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que Sofia sugira t√≥picos inteligentemente",
      "so_that": "ideias sejam relevantes"
    },
    "description": "Implementar algoritmo de Sofia que analisa brain.md e sugere t√≥picos alinhados com pilares, hist√≥rias n√£o usadas, e variedade de formatos.",
    "acceptance_criteria": [
      "Sofia analisa: Pilares de conte√∫do, Hist√≥rias ainda n√£o usadas, Valores a explorar, Posts j√° gerados (evitar repeti√ß√£o)",
      "Sugere 12-20 t√≥picos: Alinhados com pilares, Variedade de tipos (40% educativo, 30% storytelling, 20% inspiracional, 10% opini√£o), Variedade de formatos (70% posts, 20% carross√©is, 10% artigos)",
      "Para cada t√≥pico sugerido: T√≠tulo/descri√ß√£o, Pilar relacionado, Formato sugerido, Canal sugerido, Raz√£o da sugest√£o",
      "Founder pode: Aceitar/Modificar/Rejeitar sugest√£o, Adicionar t√≥pico pr√≥prio"
    ],
    "tasks": [
      "Implementar algoritmo de sugest√£o",
      "Analisar brain.md (pilares, hist√≥rias)",
      "Gerar t√≥picos diversos",
      "Balancear tipos e formatos",
      "Permitir edi√ß√£o pelo founder",
      "Testar com brain.md real"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-031"]
  },
  {
    "story_num": "035",
    "title": "Testar Planejamento de 1 M√™s",
    "epic": "EPIC-06",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "gerar calend√°rio de 1 m√™s",
      "so_that": "eu valide planejamento"
    },
    "description": "Executar Workflow #2, gerar calend√°rio editorial de 1 m√™s completo (12-20 posts), validar que t√≥picos s√£o relevantes e distribui√ß√£o √© balanceada.",
    "acceptance_criteria": [
      "Workflow #2 executado com sucesso",
      "Calend√°rio gerado em `docs/calendar.md`",
      "Conte√∫do do calend√°rio: 12-20 posts planejados, 60% LinkedIn / 40% Instagram, Pilares balanceados, Mix de formatos, Mix de tipos",
      "T√≥picos s√£o: Alinhados com pilares, Relevantes ao nicho, Espec√≠ficos (n√£o gen√©ricos), Variados (n√£o repetitivos)",
      "Founder aprova calend√°rio",
      "Dura√ß√£o <= 45 min"
    ],
    "tasks": [
      "Executar `/cf-workflow planejamento-mensal`",
      "Fornecer objetivos do m√™s",
      "Sofia sugere t√≥picos",
      "Founder revisa sugest√µes",
      "Sofia gera calend√°rio",
      "Validar docs/calendar.md criado",
      "Analisar qualidade de t√≥picos",
      "Founder aprova"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-034"]
  },
  {
    "story_num": "036",
    "title": "Criar Workflow #5 (Repurposing)",
    "epic": "EPIC-07",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "executar Workflow #5 (Repurposing)",
      "so_that": "eu reutilize conte√∫do eficientemente"
    },
    "description": "Criar Workflow #5 que adapta conte√∫do existente para outro canal ou formato: LinkedIn ‚Üí Instagram, Post ‚Üí Artigo, Artigo ‚Üí S√©rie.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/workflows/05-repurposing.md` criado",
      "Estrutura: id repurposing, dura√ß√£o 10-15 min, agentes orchestrator/linkedin-writer/instagram-creator",
      "3 tipos de repurposing suportados: Cross-channel (LinkedIn ‚Üî Instagram), Expansion (Post ‚Üí Artigo longo), Breakdown (Artigo ‚Üí 3-5 posts s√©rie)",
      "4 passos: Carlos pergunta conte√∫do original + tipo, Agente apropriado faz adapta√ß√£o, Valida√ß√£o de voz (>= 8.5 mantido), Salvar conte√∫do adaptado",
      "Preserva autenticidade (voice score >= 8.5)",
      "Execut√°vel via `/cf-workflow repurposing`"
    ],
    "tasks": [
      "Criar `.content-foundry/workflows/05-repurposing.md`",
      "Definir 3 tipos de repurposing",
      "Mapear agentes por tipo",
      "Definir passos",
      "Testar end-to-end"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-012", "STORY-024"]
  },
  {
    "story_num": "037",
    "title": "Criar Tarefa de Adapta√ß√£o Cross-Channel",
    "epic": "EPIC-07",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "adaptar post LinkedIn para Instagram",
      "so_that": "conte√∫do alcance m√∫ltiplos canais"
    },
    "description": "Criar tarefa `adaptar-canal.md` que adapta conte√∫do de um canal para outro: LinkedIn ‚Üí Instagram (torna mais casual, adiciona hashtags) ou Instagram ‚Üí LinkedIn (torna mais profissional).",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/tasks/adaptar-canal.md` criado",
      "2 dire√ß√µes suportadas: LinkedIn ‚Üí Instagram (tom casual, par√°grafos curtos, hashtags, emojis, CTA direto), Instagram ‚Üí LinkedIn (tom profissional, par√°grafos estruturados, remove emojis/hashtags, CTA sutil)",
      "Mant√©m: N√∫cleo da mensagem, Hist√≥rias pessoais, Autenticidade (voice >= 8.5), Safe mode",
      "Voice validation ap√≥s adapta√ß√£o",
      "Output salvo em canal destino"
    ],
    "tasks": [
      "Criar `.content-foundry/tasks/adaptar-canal.md`",
      "Definir adapta√ß√µes LinkedIn ‚Üí Instagram",
      "Definir adapta√ß√µes Instagram ‚Üí LinkedIn",
      "Implementar preserva√ß√£o de n√∫cleo",
      "Validar voz ap√≥s adapta√ß√£o",
      "Testar ambas dire√ß√µes"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-036"]
  },
  {
    "story_num": "038",
    "title": "Criar Tarefa de Expans√£o (Post ‚Üí Artigo)",
    "epic": "EPIC-07",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "expandir post curto em artigo longo",
      "so_that": "eu aprofunde t√≥picos"
    },
    "description": "Criar tarefa `expandir-conteudo.md` que transforma post de 800-1300 chars em artigo de 1500-2000 palavras, mantendo voz e adicionando profundidade.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/tasks/expandir-conteudo.md` criado",
      "Input: post existente (800-1300 chars)",
      "Output: artigo LinkedIn longo (1500-2000 palavras)",
      "Processo: Identifica n√∫cleo do post, Elicita aspectos a aprofundar, Consulta brain.md, Expande cada se√ß√£o, Adiciona intro/conclus√£o, Estrutura em se√ß√µes (H2/H3), Valida voz >= 8.5",
      "Mant√©m: Voz aut√™ntica, N√∫cleo da mensagem, Storytelling",
      "Adiciona: Profundidade (frameworks/exemplos), Hist√≥rias adicionais, Se√ß√µes estruturadas, Takeaways claros"
    ],
    "tasks": [
      "Criar `.content-foundry/tasks/expandir-conteudo.md`",
      "Definir algoritmo de expans√£o",
      "Perguntas de elicita√ß√£o",
      "Estrutura de artigo longo",
      "Valida√ß√£o de voz",
      "Testar com post real"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-036"]
  },
  {
    "story_num": "039",
    "title": "Criar Tarefa de Breakdown (Artigo ‚Üí S√©rie)",
    "epic": "EPIC-07",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "quebrar artigo longo em s√©rie de posts",
      "so_that": "conte√∫do seja distribu√≠do"
    },
    "description": "Criar tarefa `quebrar-conteudo.md` que divide artigo longo (1500-2000 palavras) em 3-5 posts sequenciais, cada um standalone mas conectado.",
    "acceptance_criteria": [
      "Arquivo `.content-foundry/tasks/quebrar-conteudo.md` criado",
      "Input: artigo longo (1500-2000 palavras)",
      "Output: 3-5 posts sequenciais",
      "Processo: Analisa artigo identifica se√ß√µes, Quebra em 3-5 cap√≠tulos, Cada cap√≠tulo ‚Üí 1 post (800-1300 chars), Adiciona conectores entre posts, Numera posts (Post 1/4, 2/4, etc), Valida voz >= 8.5",
      "Cada post: Standalone (pode ser lido sozinho), Conectado (referencia posts anteriores/seguintes), Voice >= 8.5, Estrutura completa (gancho + corpo + CTA)",
      "S√©rie mant√©m flow narrativo"
    ],
    "tasks": [
      "Criar `.content-foundry/tasks/quebrar-conteudo.md`",
      "Algoritmo de divis√£o em se√ß√µes",
      "Adicionar conectores",
      "Numera√ß√£o de s√©rie",
      "Validar cada post individualmente",
      "Testar com artigo real"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-036"]
  },
  {
    "story_num": "040",
    "title": "Testar Repurposing End-to-End",
    "epic": "EPIC-07",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "testar 3 tipos de repurposing",
      "so_that": "eu valide funcionamento"
    },
    "description": "Executar Workflow #5 tr√™s vezes, testando cada tipo de repurposing: LinkedIn ‚Üí Instagram, Post ‚Üí Artigo, Artigo ‚Üí S√©rie.",
    "acceptance_criteria": [
      "3 repurposing executados: LinkedIn ‚Üí Instagram (tom casual, hashtags, voice >= 8.5, salvo em instagram-*.md), Post ‚Üí Artigo (artigo 1500-2000 palavras, profundidade adicionada, voice >= 8.5), Artigo ‚Üí S√©rie (3-5 posts gerados, cada standalone e conectado, voice >= 8.5 em todos)",
      "Founder aprova todos repurposing",
      "Autenticidade preservada em todos casos",
      "Dura√ß√£o <= 15 min por repurposing"
    ],
    "tasks": [
      "Executar Workflow #5 (LinkedIn ‚Üí Instagram)",
      "Executar Workflow #5 (Post ‚Üí Artigo)",
      "Executar Workflow #5 (Artigo ‚Üí S√©rie)",
      "Validar voice scores",
      "Comparar original vs adaptado",
      "Founder approval",
      "Documentar resultados"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-037", "STORY-038", "STORY-039"]
  },
  {
    "story_num": "041",
    "title": "Implementar Tracking de M√©tricas",
    "epic": "EPIC-08",
    "priority": "P3",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "que sistema rastreie m√©tricas de posts",
      "so_that": "eu entenda minha produ√ß√£o"
    },
    "description": "Implementar tracking autom√°tico de m√©tricas: total de posts gerados, posts por canal, voice score m√©dio, pilares mais usados.",
    "acceptance_criteria": [
      "M√©tricas rastreadas automaticamente: Total de posts gerados, Posts por canal (LinkedIn/Instagram), Posts por formato (post/carrossel/artigo), Voice score m√©dio/m√≠nimo/m√°ximo, Taxa de aprova√ß√£o (% >= 8.5), Pilares mais utilizados, T√≥picos mais frequentes, Tempo m√©dio de gera√ß√£o",
      "Dados salvos em `.foundry/analytics.yaml`",
      "Atualiza√ß√£o autom√°tica ap√≥s cada post gerado",
      "Formato estruturado (YAML)",
      "Hist√≥rico mantido (n√£o sobrescrever)"
    ],
    "tasks": [
      "Criar schema `.foundry/analytics.yaml`",
      "Implementar coleta de m√©tricas",
      "Atualizar ap√≥s cada post gerado",
      "Calcular m√©dias e aggrega√ß√µes",
      "Testar com posts gerados"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-017"]
  },
  {
    "story_num": "042",
    "title": "Criar Dashboard de Analytics",
    "epic": "EPIC-08",
    "priority": "P3",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "visualizar m√©tricas em dashboard",
      "so_that": "eu entenda performance rapidamente"
    },
    "description": "Criar dashboard em Markdown com tabelas e ASCII art mostrando m√©tricas principais de forma visual.",
    "acceptance_criteria": [
      "Arquivo `.foundry/analytics-dashboard.md` gerado",
      "Se√ß√µes: Overview (Total posts, Voice score m√©dio, Taxa aprova√ß√£o), Por Canal (LinkedIn/Instagram %), Por Formato (Posts/Carross√©is/Artigos %), Por Pilar (ranking), Tend√™ncias (voice score e posts por semana em ASCII charts)",
      "Atualizado via comando `/cf-analytics`",
      "Formato leg√≠vel e visual"
    ],
    "tasks": [
      "Criar template de dashboard",
      "Gerar tabelas de m√©tricas",
      "Criar ASCII charts",
      "Implementar comando `/cf-analytics`",
      "Testar com dados reais"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-041"]
  },
  {
    "story_num": "043",
    "title": "Implementar Sugest√µes de Melhoria",
    "epic": "EPIC-08",
    "priority": "P3",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "sugest√µes de melhoria baseadas em dados",
      "so_that": "eu evolua meu conte√∫do"
    },
    "description": "Analisar m√©tricas e gerar sugest√µes autom√°ticas de melhoria: pilares sub-utilizados, formatos pouco explorados, voice score baixo em certos t√≥picos.",
    "acceptance_criteria": [
      "Sistema analisa m√©tricas e identifica: Pilares sub-utilizados (< 20%), Canais desbalanceados (> 70% em um canal), Voice score baixo em certos t√≥picos/pilares, Formatos pouco explorados (0 carross√©is em 1 m√™s), Repeti√ß√£o excessiva de temas",
      "Gera sugest√µes espec√≠ficas acion√°veis (n√£o gen√©ricas)",
      "Sugest√µes inclu√≠das no dashboard"
    ],
    "tasks": [
      "Implementar an√°lise de m√©tricas",
      "Identificar padr√µes e gaps",
      "Gerar sugest√µes espec√≠ficas",
      "Adicionar ao dashboard",
      "Testar com dados reais"
    ],
    "estimate": "2 story points",
    "dependencies": ["STORY-042"]
  },
  {
    "story_num": "044",
    "title": "Testar Analytics End-to-End",
    "epic": "EPIC-08",
    "priority": "P3",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "visualizar analytics do meu conte√∫do",
      "so_that": "eu entenda minha produ√ß√£o"
    },
    "description": "Executar comando `/cf-analytics` com pelo menos 20 posts gerados, validar que m√©tricas est√£o corretas e insights s√£o √∫teis.",
    "acceptance_criteria": [
      ">= 20 posts gerados (LinkedIn + Instagram)",
      "Comando `/cf-analytics` executado",
      "Dashboard `.foundry/analytics-dashboard.md` gerado",
      "M√©tricas corretas: Total de posts, Voice score m√©dio, Distribui√ß√£o por canal, Pilares contados corretamente",
      "Sugest√µes s√£o: Relevantes aos dados, Acion√°veis, Espec√≠ficas (n√£o gen√©ricas)",
      "Founder acha insights √∫teis",
      "Dashboard √© leg√≠vel"
    ],
    "tasks": [
      "Garantir >= 20 posts gerados",
      "Executar `/cf-analytics`",
      "Validar m√©tricas",
      "Validar sugest√µes",
      "Feedback do founder",
      "Ajustar se necess√°rio"
    ],
    "estimate": "1 story point",
    "dependencies": ["STORY-043"]
  },
  {
    "story_num": "045",
    "title": "Aprimorar Error Handling",
    "epic": "EPIC-09",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "mensagens de erro claras",
      "so_that": "eu saiba o que fazer quando algo falha"
    },
    "description": "Melhorar mensagens de erro em todos workflows e agentes: erros devem ser claros, n√£o t√©cnicos, com sugest√µes de solu√ß√£o.",
    "acceptance_criteria": [
      "5 erros comuns melhorados: brain.md n√£o encontrado, Voice score < 8.5, Comando inv√°lido, Agente n√£o existe, YAML inv√°lido",
      "Todos erros t√™m: Descri√ß√£o clara (n√£o t√©cnica), Causa prov√°vel, Sugest√£o de solu√ß√£o, Comando para resolver (se aplic√°vel)",
      "Graceful degradation (sistema n√£o quebra)"
    ],
    "tasks": [
      "Identificar 5+ erros comuns",
      "Reescrever mensagens",
      "Adicionar sugest√µes",
      "Testar cada cen√°rio de erro",
      "Documentar error handling"
    ],
    "estimate": "1 story point",
    "dependencies": null
  },
  {
    "story_num": "046",
    "title": "Criar README de Uso",
    "epic": "EPIC-09",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "documenta√ß√£o de uso (README)",
      "so_that": "eu relembre como usar o sistema"
    },
    "description": "Criar `README.md` na raiz do projeto com Quick Start, comandos principais, exemplos pr√°ticos, troubleshooting.",
    "acceptance_criteria": [
      "Arquivo `README.md` criado na raiz",
      "Se√ß√µes: Quick Start (5 min), Comandos Principais, Agentes Dispon√≠veis (6+ agentes), Exemplos Pr√°ticos, Troubleshooting, Arquitetura (resumo)",
      "Linguagem clara e acess√≠vel",
      "Exemplos concretos",
      "Links para documenta√ß√£o detalhada"
    ],
    "tasks": [
      "Criar README.md",
      "Escrever Quick Start",
      "Listar comandos",
      "Adicionar exemplos",
      "Troubleshooting comum",
      "Links para docs",
      "Review e polish"
    ],
    "estimate": "2 story points",
    "dependencies": null
  },
  {
    "story_num": "047",
    "title": "Criar Comando de Demo",
    "epic": "EPIC-09",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "comando de demo",
      "so_that": "eu mostre capabilities do sistema rapidamente"
    },
    "description": "Criar comando `/cf-demo` que executa demonstra√ß√£o interativa do sistema: mostra agentes, gera post exemplo, mostra valida√ß√µes.",
    "acceptance_criteria": [
      "Comando `/cf-demo` criado",
      "5 etapas da demo: Introdu√ß√£o, Agentes (lista 6+), Gera√ß√£o de Post (exemplo completo), Quality Gates (explica 5 layers), Pr√≥ximos Passos",
      "Dura√ß√£o: 3-5 min",
      "Interativo (founder pode pular etapas)",
      "Usa dados exemplo (n√£o brain.md real)"
    ],
    "tasks": [
      "Criar comando `/cf-demo`",
      "Definir 5 etapas",
      "Criar dados exemplo",
      "Implementar interatividade",
      "Testar demo end-to-end",
      "Polish apresenta√ß√£o"
    ],
    "estimate": "2 story points",
    "dependencies": null
  },
  {
    "story_num": "048",
    "title": "UX Final Polish",
    "epic": "EPIC-09",
    "priority": "P2",
    "status": "Backlog",
    "narrative": {
      "role": "founder",
      "want": "UX polida",
      "so_that": "experi√™ncia seja excelente"
    },
    "description": "Refinar UX de todos workflows: mensagens consistentes, progresso claro, celebra√ß√µes de sucesso, comandos intuitivos.",
    "acceptance_criteria": [
      "Mensagens de feedback aprimoradas: Confirma√ß√µes de a√ß√µes, Progresso de workflows (Step 2/5...), Celebra√ß√µes (Post aprovado! üéâ)",
      "Comandos consistentes: Sempre prefixo `*` para agente, Sempre prefixo `/cf-` para sistema, Naming intuitivo",
      "Fluxos suaves: Transi√ß√µes claras entre agentes, Handoffs expl√≠citos, Contexto mantido",
      "Ajudas contextuais: Se erro comando sugere correto, Se workflow falha explica por qu√™, Se primeira vez oferece ajuda extra",
      "Visual polish: Emojis consistentes, Formata√ß√£o Markdown consistente, Quebras de linha apropriadas"
    ],
    "tasks": [
      "Audit de todas mensagens",
      "Padronizar feedback",
      "Adicionar progressos",
      "Melhorar transi√ß√µes",
      "Adicionar ajudas contextuais",
      "Polish visual",
      "Teste de usabilidade com founder"
    ],
    "estimate": "1 story point",
    "dependencies": null
  }
]
